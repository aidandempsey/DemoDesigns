-- Title Section Start
-- VHDL Testbench - CB4CLED_TB
-- Generated by HDLGen-ChatGPT on 20-February-2024 at 14:39
-- Github: https://github.com/HDLGen-ChatGPT/HDLGen-ChatGPT

-- Component Name:	CB4CLED
-- Title:	4-bit cascadable, loadable, up/down counter, with asynchronpous rst

-- Author(s):	Fearghal Morgan
-- Organisation:	University of Galway
-- Email:	fearghal.morgan@university.ie
-- Date:	20/02/2024

-- Description:	 Refer to component's HDL Model for description and signal dictionary
-- Title Section End

-- Library declarations
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- Testbench entity declaration
entity CB4CLED_TB is end entity CB4CLED_TB;

architecture behave of CB4CLED_TB is

-- unit under test (UUT) component declaration. Identical to component entity, with 'entity' replaced with 'component'
component CB4CLED is 
Port(
	clk : in std_logic;
	rst : in std_logic;
	load : in std_logic;
	loadDat : in std_logic_vector(3 downto 0);
	ce : in std_logic;
	up : in std_logic;
	count : out std_logic_vector(3 downto 0);
	TC : out std_logic;
	ceo : out std_logic 
	);
end component;

-- testbench signal declarations
signal testNo: integer; -- aids locating test in simulation waveform
signal endOfSim : boolean := false; -- assert at end of simulation to highlight simuation done. Stops clk signal generation.

-- Typically use the same signal names as in the VHDL entity, with keyword signal added, and without in/out mode keyword

signal clk: std_logic := '1';
signal rst: std_logic;        

signal load : std_logic;
signal loadDat : std_logic_vector(3 downto 0);
signal ce : std_logic;
signal up : std_logic;
signal count : std_logic_vector(3 downto 0);
signal TC : std_logic;
signal ceo : std_logic;

constant period: time := 20 ns; -- Default simulation time. Use as simulation delay constant, or clk period if sequential model ((50MHz clk here)
 
begin

-- Generate clk signal, when endOfSim = FALSE / 0
clkStim: clk <= not clk after period/2 when endOfSim = false else '0';

-- Instantiate the Unit Under Test (UUT)
-- Map the component's internal signals to testbench signals
UUT: CB4CLED
port map
	(
	clk => clk, 
	rst => rst, 
	load => load, 
	loadDat => loadDat, 
	ce => ce, 
	up => up, 
	count => count, 
	TC => TC, 
	ceo => ceo
	);

-- Signal stimulus process
-- Process automatically executes at start of simulation due to empty sensitivity list.
-- Process halts at the 'wait;' statement
stim_p: process
begin
	report "%N Simulation start, time = "& time'image(now);

	-- Apply default INPUT signal values.
	-- Each stimulus signal change occurs 0.2*period after the active low-to-high clk edge
	-- if signal type is 'std_logic', use '0'
	-- if signal type is 'std_logic_vector' use (others => '0')
	-- if signal type is 'integer' use 0
	load <= '0';
	loadDat <= (others => '0');
	ce <= '0';
	up <= '0';
	report "Assert and toggle rst";
	testNo <= 0;
	rst    <= '1';
	wait for period*1.2; -- assert rst for 1.2*period, deasserting rst 0.2*period after active clk edge
	rst   <= '0';
	wait for period; -- wait 1 clock period
	
	-- START Testbench stimulus


	-- END Testbench stimulus

	report "%N Simulation end, time = "& time'image(now);
	-- Assert 'endOfSim' flag to stop the clock signal
	endOfSim <= TRUE;
	wait; -- Wait forever
end process; 
end behave;