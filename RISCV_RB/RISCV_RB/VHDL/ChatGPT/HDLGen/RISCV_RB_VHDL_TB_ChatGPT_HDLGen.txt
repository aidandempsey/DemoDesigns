Perform the following VHDL sequence output in a formatted code box within a single stim_p process statement, for each row in the table
testNo
Note field as a comment, though include no other comments
Each input signal stimulus value, using the input signal radix format specified in table row 3
Only include one wait statement per table line, after signal stimulus have been assigned, and using format wait for (n * period) with brackets, where n is the value in the row delay column
Test of output signal values with the values in the 'Output signals' column, outputting a message if the test fails

signal testNo: integer;
signal period: time := 20 ns;
signal RWr : std_logic;
signal rd : std_logic_vector(4 downto 0);
signal rs1 : std_logic_vector(4 downto 0);
signal rs2 : std_logic_vector(4 downto 0);
signal rs1D : std_logic_vector(31 downto 0);
signal rs2D : std_logic_vector(31 downto 0);
signal WBDat : std_logic_vector(31 downto 0);
signal ce : std_logic;

TestNo 	 Input signals                                            					
	 delay      	 Output signals            		 Note
	 ce     	 RWr    	rd     	WBDat       	rs1    	rs2    	            	
rs1D        	rs2D        	 
       	1'b	1'b	5'b	32'h	5'b	5'b	            	
32'h	32'h	
1	1	1	00100	deadbeef    	00100	00100	1	
deadbeef    	deadbeef    	Write RB(4).  Read RB(4) on rs1D and rs2D
2	1	1	00101	c001cafe    	00100	00101	1	
deadbeef    	c001cafe    	Write RB(5).  Read RB(4) on rs1D and RB(5) on rs2D)
3	1	1	00110	f00dcafe    	00110	00100	1	
f00dcafe    	deadbeef    	Write RB(6).  Read RB(6) on rs1D and RB(4) on rs2D
4	1	1	00001	a5a5a5a5    	00001	00001	2	
a5a5a5a5    	a5a5a5a5    	Write RB(1).  Read RB(1) on rs1D and rs2D
5	1	1	11111	3c3c3c3c    	11111	00001	3	
3c3c3c3c    	a5a5a5a5    	Write RB(31). Read RB(31) on rs1D and RB(1) on rs2D
6	1	1	00000	5a5a5a5a    	11111	00000	3	
3c3c3c3c    	00000000	Write RB(0).  Read RB(31) on rs1D and RB(0)=0 on rs2D
7	0	1	00100	c001100c    	00100	11111	1	
deadbeef    	3c3c3c3c    	Write/read RB(4), with ce deasserted. Read RB(4) on rs1D and RB(31) on rs2D
8	1	1	00100	c001100c    	00100	00100	1	
c001100c    	c001100c    	Write RB(4). Read RB(4) on rs1D and rs2D
9	1	0	00001	ffffffff    	00001	00001	1	
a5a5a5a5    	a5a5a5a5    	Write RB(1), with RWr deasserted. Read RB(4)on rs1D and rs2D
10	1	1	00001	ffffffff    	00001	00001	1	
ffffffff    	ffffffff    	Write RB(1), with RWr deasserted. Read RB(4)on rs1D and rs2D