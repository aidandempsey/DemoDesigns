Complete the following VHDL model, and output in a single formatted code box.

Do not include any when-else VHDL constructs (conditional VHDL) inside process VHDL code (only supported in ieee 1076-2008).
Do not add any new library 'use' statements, to avoid conflicts with the ieee.numeric_std package functions.
For every assignment which includes a shift operation, only use ieee.numeric_std package shift_left or shift_right functions, and do not use sra, srl, sll functions.
For each line containing the prefix '---', replace with generated VHDL code for the logic described, and remove the '---'.
Do not include any when-else VHDL constructs (conditional VHDL) inside process VHDL code (only supported in ieee 1076-2008).
Remove all assignments in if or case statements which duplicate the default assignment
In VHDL processes, place the modified line containing suffix '-- Default assignment' immediately before the VHDL statements generated for lines containing prefix '---'.
Leave all labels unchanged.
For every assignment that includes an add (+) or subtract (-) operation, use 'ieee.numeric_std' package signal type conversion functions to ensure correct VHDL syntax.
In assignments which include sign-extend operator, sign extending by one bit, use single quotes to define the single bit.

-- Title Section Start
-- Generated by HDLGen, Github https://github.com/HDLGen-ChatGPT/HDLGen-ChatGPT, on 29-March-2024 at 10:48

-- Component Name : singleShot
-- Title          : Pulse generator, one clock period duration

-- Author(s)      : Fearghal Morgan
-- Organisation   : University of Galway
-- Email          : fearghal.morgan@universityofgalway.ie
-- Date           : 29/03/2024

-- Description
-- One clock period duration pulse aShot asserted (h) when sw is asserted (h).
-- aShot deasserted on subsequent clk active (l-h) edge.
-- If rst asserted while sw is asserted, wait for sw to deassert before generating aShot 
-- pulse on next rising edge on sw

-- entity signal dictionary
-- sw	Assertion L-H edge asserts signal aShot. Signal sw must 
-- deassert before reassertion to genersate the subsequent 
-- aShot pulse.
-- aShot	Asserted on L-H edge of signal sw. Deasserts on subsequent 
-- active clk edge. Asserted for maximum one clock period.
-- clk	clk signal
-- rst	rst signal

-- internal signal dictionary
-- NS	Current / Next state signal
-- CS	Current / Next state signal

-- Title Section End
-- library declarations
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.MainPackage.all;

-- entity declaration
entity singleShot is 
Port(
	sw : in std_logic;
	aShot : out std_logic;
	clk : in std_logic;
	rst : in std_logic
);
end entity singleShot;

architecture Combinational of singleShot is
-- Internal signal declarations
type stateType is (waitFor0, waitFor1);
signal NS : stateType;
signal CS : stateType;

begin

NSAndOPDeocde_p: process(sw,CS)
begin
	aShot <= '0';-- Default assignment 
	NS <= CS;-- Default assignment 
	
--- case CS
--- waitFor1 
--- if sw = '1' 
--- NS = waitFor0 
--- aShot = '1' 
--- waitFor0
--- if sw = '0'
--- NS = waitFor1
end process;

stateReg_p: process(clk,rst)
begin
	if rst = '1' then
		CS <= waitFor0;
	elsif rising_edge(clk) then
		CS <= NS;
	end if;
end process;

end Combinational;