// Title Section Start
// Generated by HDLGen, Github https://github.com/HDLGen-ChatGPT/HDLGen-ChatGPT, on 24-September-2024 at 13:34

// Component Name : singleShot
// Title          : Pulse generator, one clock period duration

// Author(s)      : Fearghal Morgan
// Organisation   : University of Galway
// Email          : fearghal.morgan@universityofgalway.ie
// Date           : 24/09/2024

// Description
// One clock period duration pulse aShot asserted (h) when sw is asserted (h).
// aShot deasserted on subsequent clk active (l-h) edge.
// If rst asserted while sw is asserted, wait for sw to deassert before generating aShot 
// pulse on next rising edge on sw

// entity signal dictionary
// sw	Assertion L-H edge asserts signal aShot. Signal sw must 
// deassert before reassertion to generate the subsequent 
// aShot pulse.
// aShot	Asserted on L-H edge of signal sw. Deasserts on subsequent 
// active clk edge. Asserted for maximum one clock period.
// clk	clk signal
// rst	rst signal

// internal signal dictionary
// NS	Current / Next state signal
// CS	Current / Next state signal

// Title Section End
// module declaration
module singleShot(
		sw,
		aShot,
		clk,
		rst
	);

	// Port definitions
	input  sw;
	output  aShot;
	input  clk;
	input  rst;

    reg  aShot;

    // Internal signal declarations
    parameter waitFor0 = 1'b0;
    parameter waitFor1 = 1'b1;
    reg  NS;
    reg  CS;

    always @(sw or CS)
    begin : NSAndOPDecode_p
    	aShot = 1'b0; // Default assignment
    	NS = CS; // Default assignment
    	
    	case (CS)
    		waitFor1:
    			if (sw == 1'b1) 
    			begin
    				NS = waitFor0;
    				aShot = 1'b1;
    			end
    		waitFor0:
    			if (sw == 1'b0)
    				NS = waitFor1;
    	endcase
    end

    always @(posedge clk or posedge rst)
    begin : stateReg_p	
    	if ( rst == 1'b1 )
    		begin
    		CS <= waitFor0;
    		end
    	else
    		begin
    		CS <= NS;
    		end
    end

endmodule
